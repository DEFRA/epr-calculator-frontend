@using EPR.Calculator.Frontend.ViewModels
@model LocalAuthorityViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var BackLinkValue = "Dashboard";
    var EffectiveFromDate = @Model.ByCountry?.FirstOrDefault()?.FirstOrDefault()?.EffectiveFrom;
}

<script src="~/lib/jquery/dist/jquery.min.js"></script>

<partial name="_BackLinkPartial" model="(BackLinkValue, Model.CurrentUser)" />

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        @if (Model == null || Model?.ByCountry?.Count == 0)
        {
            <partial name="_LapcapDataNotExistsPartial" />
        }
        else
        {
            <div class="govuk-caption-l">
                Last updated by @Model?.LastUpdatedBy at <span id="effective-from"></span>
            </div>
            <br>
            <h1 class="govuk-heading-xl">Local authority disposal costs</h1>
            @foreach (var country in Model?.ByCountry)
            {
                <h2 class="govuk-heading-l govuk-!-margin-top-3">@country.Key</h2>
                <dl class="govuk-summary-list govuk-!-margin-bottom-9">
                    @foreach (var localAuthorityData in country)
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                @localAuthorityData.Material
                            </dt>
                            <dd class="govuk-summary-list__actions">
                                @localAuthorityData.TotalCost
                            </dd>
                        </div>
                    }
                </dl>
            }

            <form action="" method="post" novalidate="">
                <div class="govuk-button-group">
                    <a href="@Url.Action("Index", "LocalAuthorityUploadFile")" class="govuk-button" type="submit">Upload disposal costs</a>
                    <a href="@Url.Action("Index", "Dashboard")" class="govuk-link" type="dash">Return to the dashboard</a>
                </div>
            </form>
        }
    </div>
</div>

@if (Model != null && Model?.ByCountry?.Count > 0)
{
    <script type="text/javascript">
        $(document).ready(() => {
            const [dateString, timeString] = ('@EffectiveFromDate').split(' ');

            var day = month = year = 0;

            // MM/DD/YYYY is the date format in Azure portal
            // DD/MM/YYYY is the date format in local environment
            // This condition check is required to correctly get the values of day and month based on the environment
            if (isNaN(new Date(dateString))) {
                [day, month, year] = dateString.split('/');
            } else {
                [month, day, year] = dateString.split('/');
            }

            const [hour, minute, second] = timeString.split(':');

            const localConvertedDate = convertUTCDateToLocalDate(new Date(year, month - 1, day, hour, minute, second));

            const dateValueFormatted = '<b>' + localConvertedDate.getHours() + ':' + String(localConvertedDate.getMinutes()).padStart(2, "0") + '</b> on ' + localConvertedDate.toLocaleDateString('en-gb', { day: 'numeric', month: 'short', year: 'numeric' });
            $('#effective-from').html(dateValueFormatted);
        });

        function convertUTCDateToLocalDate(date) {
            var newCalculatedDate = new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000);

            var offset = date.getTimezoneOffset() / 60;
            var hours = date.getHours();

            newCalculatedDate.setHours(hours - offset);

            return newCalculatedDate;
        }
    </script>
}
