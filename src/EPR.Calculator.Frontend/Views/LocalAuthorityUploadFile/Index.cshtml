@model LapcapUploadViewModel;

@{
    var errors = Model.Errors;
}

<partial name="_BackLinkPartial" model="Model.BackLinkViewModel" />

@if (errors != null)
{
    <partial name="_ErrorBannerPartial" model="errors" />
}
@if (errors != null)
{
    <h1 class="govuk-heading-l"><label for="file-upload-1">Upload the file again</label></h1>
}
else
{
    <h1 class="govuk-heading-l">Upload new local authority disposal costs</h1>
}

@if (errors == null)
{
    <h2 class="govuk-heading-m"><label for="file-upload-1">Upload a file</label></h2>
}

<partial name="_UploadFileInformationPartial" />

@using (Html.BeginForm("Upload", "LocalAuthorityUploadFile", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="@(errors != null ? "govuk-form-group govuk-form-group--error": "govuk-form-group")">
        @if (errors != null)
        {
            @foreach (var error in errors)
            {
                <p id="@error.DOMElementId" class="govuk-error-message">
                    <span class="govuk-visually-hidden">Error:</span> @error.ErrorMessage
                </p>
            }
        }

        <input class="govuk-file-upload form-control" id="file-upload-1" name="fileUpload" validation-class="govuk-input-error" validation-for="file-upload-1" type="file">
    </div>

    <button id="btnUploadFile" type="submit" class="govuk-button" data-module="govuk-button">
        Upload file
    </button>
}
